Terminals unused in grammar

   ARROW
   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE ProgramAux RBRACE

    2 ProgramAux: ProgramAux MethodDecl
    3           | ProgramAux FieldDecl
    4           | ProgramAux SEMICOLON
    5           | %empty

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID CommaIdAux SEMICOLON
    8          | error SEMICOLON

    9 CommaIdAux: COMMA ID CommaIdAux
   10           | %empty

   11 Type: BOOL
   12     | INT
   13     | DOUBLE

   14 MethodHeader: Type ID LPAR FormalParams RPAR
   15             | VOID ID LPAR FormalParams RPAR

   16 FormalParams: Type ID FormalParamsAux
   17             | STRING1 LSQ RSQ ID
   18             | %empty

   19 FormalParamsAux: FormalParamsAux COMMA Type ID
   20                | %empty

   21 MethodBody: LBRACE MethodBodyAux RBRACE

   22 MethodBodyAux: MethodBodyAux Statement
   23              | MethodBodyAux VarDecl
   24              | %empty

   25 VarDecl: Type ID CommaIdAux SEMICOLON

   26 Statement: LBRACE StatementAux RBRACE
   27          | IF LPAR Expr RPAR Statement
   28          | IF LPAR Expr RPAR Statement ELSE Statement
   29          | WHILE LPAR Expr RPAR Statement
   30          | RETURN Expr SEMICOLON
   31          | RETURN SEMICOLON
   32          | SEMICOLON
   33          | MethodInvocation SEMICOLON
   34          | Assignment SEMICOLON
   35          | ParseArgs SEMICOLON
   36          | PRINT LPAR Expr RPAR SEMICOLON
   37          | PRINT LPAR STRLIT RPAR SEMICOLON
   38          | error SEMICOLON

   39 StatementAux: StatementAux Statement
   40             | %empty

   41 AuxExpr: AuxExpr COMMA Expr
   42        | %empty

   43 MethodInvocation: ID LPAR Expr AuxExpr RPAR
   44                 | ID LPAR RPAR
   45                 | ID LPAR error RPAR

   46 Assignment: ID ASSIGN Expr

   47 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   48          | PARSEINT LPAR error RPAR

   49 Expr: InitialExpr TextExpr
   50     | Expr OR Expr
   51     | Expr AND Expr
   52     | Expr LT Expr
   53     | Expr GT Expr
   54     | Expr EQ Expr
   55     | Expr NE Expr
   56     | Expr LE Expr
   57     | Expr GE Expr
   58     | Expr PLUS Expr
   59     | Expr MINUS Expr
   60     | Expr STAR Expr
   61     | Expr DIV Expr
   62     | Expr MOD Expr
   63     | Expr XOR Expr
   64     | Expr LSHIFT Expr
   65     | Expr RSHIFT Expr

   66 InitialExpr: InitialExpr PLUS
   67            | InitialExpr MINUS
   68            | InitialExpr NOT
   69            | %empty

   70 TextExpr: LPAR Expr RPAR
   71         | MethodInvocation
   72         | Assignment
   73         | ParseArgs
   74         | ID DOTLENGTH
   75         | ID
   76         | INTLIT
   77         | TRUE
   78         | FALSE
   79         | REALLIT
   80         | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 8 38 45 48 80
INTLIT (258) 76
REALLIT (259) 79
STRLIT (260) 37
ID (261) 1 7 9 14 15 16 17 19 25 43 44 45 46 47 74 75
WHILE (262) 29
VOID (263) 15
STRING1 (264) 17
STATIC (265) 6 7
RETURN (266) 30 31
PUBLIC (267) 6 7
PARSEINT (268) 47 48
PRINT (269) 36 37
ARROW (270)
RESERVED (271)
INT (272) 12
IF (273) 27 28
ELSE (274) 28
DOUBLE (275) 13
DOTLENGTH (276) 74
BOOL (277) 11
CLASS (278) 1
XOR (279) 63
RSHIFT (280) 65
LSHIFT (281) 64
SEMICOLON (282) 4 7 8 25 30 31 32 33 34 35 36 37 38
RSQ (283) 17 47
RPAR (284) 14 15 27 28 29 36 37 43 44 45 47 48 70 80
RBRACE (285) 1 21 26
LSQ (286) 17 47
LPAR (287) 14 15 27 28 29 36 37 43 44 45 47 48 70 80
LBRACE (288) 1 21 26
PLUS (289) 58 66
STAR (290) 60
MINUS (291) 59 67
DIV (292) 61
MOD (293) 62
LT (294) 52
GT (295) 53
EQ (296) 54
NE (297) 55
LE (298) 56
GE (299) 57
OR (300) 50
AND (301) 51
NOT (302) 68
COMMA (303) 9 19 41
ASSIGN (304) 46
TRUE (305) 77
FALSE (306) 78
LOWER_THAN_ELSE (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
ProgramAux (55)
    on left: 2 3 4 5, on right: 1 2 3 4
MethodDecl (56)
    on left: 6, on right: 2
FieldDecl (57)
    on left: 7 8, on right: 3
CommaIdAux (58)
    on left: 9 10, on right: 7 9 25
Type (59)
    on left: 11 12 13, on right: 7 14 16 19 25
MethodHeader (60)
    on left: 14 15, on right: 6
FormalParams (61)
    on left: 16 17 18, on right: 14 15
FormalParamsAux (62)
    on left: 19 20, on right: 16 19
MethodBody (63)
    on left: 21, on right: 6
MethodBodyAux (64)
    on left: 22 23 24, on right: 21 22 23
VarDecl (65)
    on left: 25, on right: 23
Statement (66)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37 38, on right: 22 27
    28 29 39
StatementAux (67)
    on left: 39 40, on right: 26 39
AuxExpr (68)
    on left: 41 42, on right: 41 43
MethodInvocation (69)
    on left: 43 44 45, on right: 33 71
Assignment (70)
    on left: 46, on right: 34 72
ParseArgs (71)
    on left: 47 48, on right: 35 73
Expr (72)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65, on right:
    27 28 29 30 36 41 43 46 47 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 70
InitialExpr (73)
    on left: 66 67 68 69, on right: 49 66 67 68
TextExpr (74)
    on left: 70 71 72 73 74 75 76 77 78 79 80, on right: 49


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE ProgramAux RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE ProgramAux RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . ProgramAux RBRACE

    $default  reduce using rule 5 (ProgramAux)

    ProgramAux  go to state 6


State 6

    1 Program: CLASS ID LBRACE ProgramAux . RBRACE
    2 ProgramAux: ProgramAux . MethodDecl
    3           | ProgramAux . FieldDecl
    4           | ProgramAux . SEMICOLON

    error      shift, and go to state 7
    PUBLIC     shift, and go to state 8
    SEMICOLON  shift, and go to state 9
    RBRACE     shift, and go to state 10

    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 7

    8 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 13


State 8

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID CommaIdAux SEMICOLON

    STATIC  shift, and go to state 14


State 9

    4 ProgramAux: ProgramAux SEMICOLON .

    $default  reduce using rule 4 (ProgramAux)


State 10

    1 Program: CLASS ID LBRACE ProgramAux RBRACE .

    $default  reduce using rule 1 (Program)


State 11

    2 ProgramAux: ProgramAux MethodDecl .

    $default  reduce using rule 2 (ProgramAux)


State 12

    3 ProgramAux: ProgramAux FieldDecl .

    $default  reduce using rule 3 (ProgramAux)


State 13

    8 FieldDecl: error SEMICOLON .

    $default  reduce using rule 8 (FieldDecl)


State 14

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID CommaIdAux SEMICOLON

    VOID    shift, and go to state 15
    INT     shift, and go to state 16
    DOUBLE  shift, and go to state 17
    BOOL    shift, and go to state 18

    Type          go to state 19
    MethodHeader  go to state 20


State 15

   15 MethodHeader: VOID . ID LPAR FormalParams RPAR

    ID  shift, and go to state 21


State 16

   12 Type: INT .

    $default  reduce using rule 12 (Type)


State 17

   13 Type: DOUBLE .

    $default  reduce using rule 13 (Type)


State 18

   11 Type: BOOL .

    $default  reduce using rule 11 (Type)


State 19

    7 FieldDecl: PUBLIC STATIC Type . ID CommaIdAux SEMICOLON
   14 MethodHeader: Type . ID LPAR FormalParams RPAR

    ID  shift, and go to state 22


State 20

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 23

    MethodBody  go to state 24


State 21

   15 MethodHeader: VOID ID . LPAR FormalParams RPAR

    LPAR  shift, and go to state 25


State 22

    7 FieldDecl: PUBLIC STATIC Type ID . CommaIdAux SEMICOLON
   14 MethodHeader: Type ID . LPAR FormalParams RPAR

    LPAR   shift, and go to state 26
    COMMA  shift, and go to state 27

    $default  reduce using rule 10 (CommaIdAux)

    CommaIdAux  go to state 28


State 23

   21 MethodBody: LBRACE . MethodBodyAux RBRACE

    $default  reduce using rule 24 (MethodBodyAux)

    MethodBodyAux  go to state 29


State 24

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 25

   15 MethodHeader: VOID ID LPAR . FormalParams RPAR

    STRING1  shift, and go to state 30
    INT      shift, and go to state 16
    DOUBLE   shift, and go to state 17
    BOOL     shift, and go to state 18

    $default  reduce using rule 18 (FormalParams)

    Type          go to state 31
    FormalParams  go to state 32


State 26

   14 MethodHeader: Type ID LPAR . FormalParams RPAR

    STRING1  shift, and go to state 30
    INT      shift, and go to state 16
    DOUBLE   shift, and go to state 17
    BOOL     shift, and go to state 18

    $default  reduce using rule 18 (FormalParams)

    Type          go to state 31
    FormalParams  go to state 33


State 27

    9 CommaIdAux: COMMA . ID CommaIdAux

    ID  shift, and go to state 34


State 28

    7 FieldDecl: PUBLIC STATIC Type ID CommaIdAux . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 29

   21 MethodBody: LBRACE MethodBodyAux . RBRACE
   22 MethodBodyAux: MethodBodyAux . Statement
   23              | MethodBodyAux . VarDecl

    error      shift, and go to state 36
    ID         shift, and go to state 37
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40
    PRINT      shift, and go to state 41
    INT        shift, and go to state 16
    IF         shift, and go to state 42
    DOUBLE     shift, and go to state 17
    BOOL       shift, and go to state 18
    SEMICOLON  shift, and go to state 43
    RBRACE     shift, and go to state 44
    LBRACE     shift, and go to state 45

    Type              go to state 46
    VarDecl           go to state 47
    Statement         go to state 48
    MethodInvocation  go to state 49
    Assignment        go to state 50
    ParseArgs         go to state 51


State 30

   17 FormalParams: STRING1 . LSQ RSQ ID

    LSQ  shift, and go to state 52


State 31

   16 FormalParams: Type . ID FormalParamsAux

    ID  shift, and go to state 53


State 32

   15 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 54


State 33

   14 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 55


State 34

    9 CommaIdAux: COMMA ID . CommaIdAux

    COMMA  shift, and go to state 27

    $default  reduce using rule 10 (CommaIdAux)

    CommaIdAux  go to state 56


State 35

    7 FieldDecl: PUBLIC STATIC Type ID CommaIdAux SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 36

   38 Statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 37

   43 MethodInvocation: ID . LPAR Expr AuxExpr RPAR
   44                 | ID . LPAR RPAR
   45                 | ID . LPAR error RPAR
   46 Assignment: ID . ASSIGN Expr

    LPAR    shift, and go to state 58
    ASSIGN  shift, and go to state 59


State 38

   29 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 60


State 39

   30 Statement: RETURN . Expr SEMICOLON
   31          | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 61

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 62
    InitialExpr  go to state 63


State 40

   47 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR
   48          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 64


State 41

   36 Statement: PRINT . LPAR Expr RPAR SEMICOLON
   37          | PRINT . LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 65


State 42

   27 Statement: IF . LPAR Expr RPAR Statement
   28          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 66


State 43

   32 Statement: SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 44

   21 MethodBody: LBRACE MethodBodyAux RBRACE .

    $default  reduce using rule 21 (MethodBody)


State 45

   26 Statement: LBRACE . StatementAux RBRACE

    $default  reduce using rule 40 (StatementAux)

    StatementAux  go to state 67


State 46

   25 VarDecl: Type . ID CommaIdAux SEMICOLON

    ID  shift, and go to state 68


State 47

   23 MethodBodyAux: MethodBodyAux VarDecl .

    $default  reduce using rule 23 (MethodBodyAux)


State 48

   22 MethodBodyAux: MethodBodyAux Statement .

    $default  reduce using rule 22 (MethodBodyAux)


State 49

   33 Statement: MethodInvocation . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 50

   34 Statement: Assignment . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 51

   35 Statement: ParseArgs . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 52

   17 FormalParams: STRING1 LSQ . RSQ ID

    RSQ  shift, and go to state 72


State 53

   16 FormalParams: Type ID . FormalParamsAux

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 73


State 54

   15 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 15 (MethodHeader)


State 55

   14 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 56

    9 CommaIdAux: COMMA ID CommaIdAux .

    $default  reduce using rule 9 (CommaIdAux)


State 57

   38 Statement: error SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 58

   43 MethodInvocation: ID LPAR . Expr AuxExpr RPAR
   44                 | ID LPAR . RPAR
   45                 | ID LPAR . error RPAR

    error  shift, and go to state 74
    RPAR   shift, and go to state 75

    INTLIT    reduce using rule 69 (InitialExpr)
    REALLIT   reduce using rule 69 (InitialExpr)
    ID        reduce using rule 69 (InitialExpr)
    PARSEINT  reduce using rule 69 (InitialExpr)
    LPAR      reduce using rule 69 (InitialExpr)
    PLUS      reduce using rule 69 (InitialExpr)
    MINUS     reduce using rule 69 (InitialExpr)
    NOT       reduce using rule 69 (InitialExpr)
    TRUE      reduce using rule 69 (InitialExpr)
    FALSE     reduce using rule 69 (InitialExpr)

    Expr         go to state 76
    InitialExpr  go to state 63


State 59

   46 Assignment: ID ASSIGN . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 77
    InitialExpr  go to state 63


State 60

   29 Statement: WHILE LPAR . Expr RPAR Statement

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 78
    InitialExpr  go to state 63


State 61

   31 Statement: RETURN SEMICOLON .

    $default  reduce using rule 31 (Statement)


State 62

   30 Statement: RETURN Expr . SEMICOLON
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR        shift, and go to state 79
    RSHIFT     shift, and go to state 80
    LSHIFT     shift, and go to state 81
    SEMICOLON  shift, and go to state 82
    PLUS       shift, and go to state 83
    STAR       shift, and go to state 84
    MINUS      shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LT         shift, and go to state 88
    GT         shift, and go to state 89
    EQ         shift, and go to state 90
    NE         shift, and go to state 91
    LE         shift, and go to state 92
    GE         shift, and go to state 93
    OR         shift, and go to state 94
    AND        shift, and go to state 95


State 63

   49 Expr: InitialExpr . TextExpr
   66 InitialExpr: InitialExpr . PLUS
   67            | InitialExpr . MINUS
   68            | InitialExpr . NOT

    INTLIT    shift, and go to state 96
    REALLIT   shift, and go to state 97
    ID        shift, and go to state 98
    PARSEINT  shift, and go to state 40
    LPAR      shift, and go to state 99
    PLUS      shift, and go to state 100
    MINUS     shift, and go to state 101
    NOT       shift, and go to state 102
    TRUE      shift, and go to state 103
    FALSE     shift, and go to state 104

    MethodInvocation  go to state 105
    Assignment        go to state 106
    ParseArgs         go to state 107
    TextExpr          go to state 108


State 64

   47 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR
   48          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 109
    ID     shift, and go to state 110


State 65

   36 Statement: PRINT LPAR . Expr RPAR SEMICOLON
   37          | PRINT LPAR . STRLIT RPAR SEMICOLON

    STRLIT  shift, and go to state 111

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 112
    InitialExpr  go to state 63


State 66

   27 Statement: IF LPAR . Expr RPAR Statement
   28          | IF LPAR . Expr RPAR Statement ELSE Statement

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 113
    InitialExpr  go to state 63


State 67

   26 Statement: LBRACE StatementAux . RBRACE
   39 StatementAux: StatementAux . Statement

    error      shift, and go to state 36
    ID         shift, and go to state 37
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40
    PRINT      shift, and go to state 41
    IF         shift, and go to state 42
    SEMICOLON  shift, and go to state 43
    RBRACE     shift, and go to state 114
    LBRACE     shift, and go to state 45

    Statement         go to state 115
    MethodInvocation  go to state 49
    Assignment        go to state 50
    ParseArgs         go to state 51


State 68

   25 VarDecl: Type ID . CommaIdAux SEMICOLON

    COMMA  shift, and go to state 27

    $default  reduce using rule 10 (CommaIdAux)

    CommaIdAux  go to state 116


State 69

   33 Statement: MethodInvocation SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 70

   34 Statement: Assignment SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 71

   35 Statement: ParseArgs SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 72

   17 FormalParams: STRING1 LSQ RSQ . ID

    ID  shift, and go to state 117


State 73

   16 FormalParams: Type ID FormalParamsAux .
   19 FormalParamsAux: FormalParamsAux . COMMA Type ID

    COMMA  shift, and go to state 118

    $default  reduce using rule 16 (FormalParams)


State 74

   45 MethodInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 119


State 75

   44 MethodInvocation: ID LPAR RPAR .

    $default  reduce using rule 44 (MethodInvocation)


State 76

   43 MethodInvocation: ID LPAR Expr . AuxExpr RPAR
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95

    $default  reduce using rule 42 (AuxExpr)

    AuxExpr  go to state 120


State 77

   46 Assignment: ID ASSIGN Expr .
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95

    $default  reduce using rule 46 (Assignment)


State 78

   29 Statement: WHILE LPAR Expr . RPAR Statement
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    RPAR    shift, and go to state 121
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95


State 79

   63 Expr: Expr XOR . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 122
    InitialExpr  go to state 63


State 80

   65 Expr: Expr RSHIFT . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 123
    InitialExpr  go to state 63


State 81

   64 Expr: Expr LSHIFT . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 124
    InitialExpr  go to state 63


State 82

   30 Statement: RETURN Expr SEMICOLON .

    $default  reduce using rule 30 (Statement)


State 83

   58 Expr: Expr PLUS . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 125
    InitialExpr  go to state 63


State 84

   60 Expr: Expr STAR . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 126
    InitialExpr  go to state 63


State 85

   59 Expr: Expr MINUS . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 127
    InitialExpr  go to state 63


State 86

   61 Expr: Expr DIV . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 128
    InitialExpr  go to state 63


State 87

   62 Expr: Expr MOD . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 129
    InitialExpr  go to state 63


State 88

   52 Expr: Expr LT . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 130
    InitialExpr  go to state 63


State 89

   53 Expr: Expr GT . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 131
    InitialExpr  go to state 63


State 90

   54 Expr: Expr EQ . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 132
    InitialExpr  go to state 63


State 91

   55 Expr: Expr NE . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 133
    InitialExpr  go to state 63


State 92

   56 Expr: Expr LE . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 134
    InitialExpr  go to state 63


State 93

   57 Expr: Expr GE . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 135
    InitialExpr  go to state 63


State 94

   50 Expr: Expr OR . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 136
    InitialExpr  go to state 63


State 95

   51 Expr: Expr AND . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 137
    InitialExpr  go to state 63


State 96

   76 TextExpr: INTLIT .

    $default  reduce using rule 76 (TextExpr)


State 97

   79 TextExpr: REALLIT .

    $default  reduce using rule 79 (TextExpr)


State 98

   43 MethodInvocation: ID . LPAR Expr AuxExpr RPAR
   44                 | ID . LPAR RPAR
   45                 | ID . LPAR error RPAR
   46 Assignment: ID . ASSIGN Expr
   74 TextExpr: ID . DOTLENGTH
   75         | ID .

    DOTLENGTH  shift, and go to state 138
    LPAR       shift, and go to state 58
    ASSIGN     shift, and go to state 59

    $default  reduce using rule 75 (TextExpr)


State 99

   70 TextExpr: LPAR . Expr RPAR
   80         | LPAR . error RPAR

    error  shift, and go to state 139

    INTLIT    reduce using rule 69 (InitialExpr)
    REALLIT   reduce using rule 69 (InitialExpr)
    ID        reduce using rule 69 (InitialExpr)
    PARSEINT  reduce using rule 69 (InitialExpr)
    LPAR      reduce using rule 69 (InitialExpr)
    PLUS      reduce using rule 69 (InitialExpr)
    MINUS     reduce using rule 69 (InitialExpr)
    NOT       reduce using rule 69 (InitialExpr)
    TRUE      reduce using rule 69 (InitialExpr)
    FALSE     reduce using rule 69 (InitialExpr)

    Expr         go to state 140
    InitialExpr  go to state 63


State 100

   66 InitialExpr: InitialExpr PLUS .

    $default  reduce using rule 66 (InitialExpr)


State 101

   67 InitialExpr: InitialExpr MINUS .

    $default  reduce using rule 67 (InitialExpr)


State 102

   68 InitialExpr: InitialExpr NOT .

    $default  reduce using rule 68 (InitialExpr)


State 103

   77 TextExpr: TRUE .

    $default  reduce using rule 77 (TextExpr)


State 104

   78 TextExpr: FALSE .

    $default  reduce using rule 78 (TextExpr)


State 105

   71 TextExpr: MethodInvocation .

    $default  reduce using rule 71 (TextExpr)


State 106

   72 TextExpr: Assignment .

    $default  reduce using rule 72 (TextExpr)


State 107

   73 TextExpr: ParseArgs .

    $default  reduce using rule 73 (TextExpr)


State 108

   49 Expr: InitialExpr TextExpr .

    $default  reduce using rule 49 (Expr)


State 109

   48 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 141


State 110

   47 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 142


State 111

   37 Statement: PRINT LPAR STRLIT . RPAR SEMICOLON

    RPAR  shift, and go to state 143


State 112

   36 Statement: PRINT LPAR Expr . RPAR SEMICOLON
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    RPAR    shift, and go to state 144
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95


State 113

   27 Statement: IF LPAR Expr . RPAR Statement
   28          | IF LPAR Expr . RPAR Statement ELSE Statement
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    RPAR    shift, and go to state 145
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95


State 114

   26 Statement: LBRACE StatementAux RBRACE .

    $default  reduce using rule 26 (Statement)


State 115

   39 StatementAux: StatementAux Statement .

    $default  reduce using rule 39 (StatementAux)


State 116

   25 VarDecl: Type ID CommaIdAux . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 117

   17 FormalParams: STRING1 LSQ RSQ ID .

    $default  reduce using rule 17 (FormalParams)


State 118

   19 FormalParamsAux: FormalParamsAux COMMA . Type ID

    INT     shift, and go to state 16
    DOUBLE  shift, and go to state 17
    BOOL    shift, and go to state 18

    Type  go to state 147


State 119

   45 MethodInvocation: ID LPAR error RPAR .

    $default  reduce using rule 45 (MethodInvocation)


State 120

   41 AuxExpr: AuxExpr . COMMA Expr
   43 MethodInvocation: ID LPAR Expr AuxExpr . RPAR

    RPAR   shift, and go to state 148
    COMMA  shift, and go to state 149


State 121

   29 Statement: WHILE LPAR Expr RPAR . Statement

    error      shift, and go to state 36
    ID         shift, and go to state 37
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40
    PRINT      shift, and go to state 41
    IF         shift, and go to state 42
    SEMICOLON  shift, and go to state 43
    LBRACE     shift, and go to state 45

    Statement         go to state 150
    MethodInvocation  go to state 49
    Assignment        go to state 50
    ParseArgs         go to state 51


State 122

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   63     | Expr XOR Expr .
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    AND     shift, and go to state 95

    $default  reduce using rule 63 (Expr)


State 123

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr
   65     | Expr RSHIFT Expr .

    PLUS   shift, and go to state 83
    STAR   shift, and go to state 84
    MINUS  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87

    $default  reduce using rule 65 (Expr)


State 124

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   64     | Expr LSHIFT Expr .
   65     | Expr . RSHIFT Expr

    PLUS   shift, and go to state 83
    STAR   shift, and go to state 84
    MINUS  shift, and go to state 85
    DIV    shift, and go to state 86
    MOD    shift, and go to state 87

    $default  reduce using rule 64 (Expr)


State 125

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   58     | Expr PLUS Expr .
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    STAR  shift, and go to state 84
    DIV   shift, and go to state 86
    MOD   shift, and go to state 87

    $default  reduce using rule 58 (Expr)


State 126

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   60     | Expr STAR Expr .
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    $default  reduce using rule 60 (Expr)


State 127

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   59     | Expr MINUS Expr .
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    STAR  shift, and go to state 84
    DIV   shift, and go to state 86
    MOD   shift, and go to state 87

    $default  reduce using rule 59 (Expr)


State 128

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   61     | Expr DIV Expr .
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    $default  reduce using rule 61 (Expr)


State 129

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   62     | Expr MOD Expr .
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    $default  reduce using rule 62 (Expr)


State 130

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   52     | Expr LT Expr .
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87

    $default  reduce using rule 52 (Expr)


State 131

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   53     | Expr GT Expr .
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87

    $default  reduce using rule 53 (Expr)


State 132

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   54     | Expr EQ Expr .
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    LE      shift, and go to state 92
    GE      shift, and go to state 93

    $default  reduce using rule 54 (Expr)


State 133

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   55     | Expr NE Expr .
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    LE      shift, and go to state 92
    GE      shift, and go to state 93

    $default  reduce using rule 55 (Expr)


State 134

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   56     | Expr LE Expr .
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87

    $default  reduce using rule 56 (Expr)


State 135

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   57     | Expr GE Expr .
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87

    $default  reduce using rule 57 (Expr)


State 136

   50 Expr: Expr . OR Expr
   50     | Expr OR Expr .
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    AND     shift, and go to state 95

    $default  reduce using rule 50 (Expr)


State 137

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   51     | Expr AND Expr .
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93

    $default  reduce using rule 51 (Expr)


State 138

   74 TextExpr: ID DOTLENGTH .

    $default  reduce using rule 74 (TextExpr)


State 139

   80 TextExpr: LPAR error . RPAR

    RPAR  shift, and go to state 151


State 140

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr
   70 TextExpr: LPAR Expr . RPAR

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    RPAR    shift, and go to state 152
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95


State 141

   48 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 48 (ParseArgs)


State 142

   47 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 153
    InitialExpr  go to state 63


State 143

   37 Statement: PRINT LPAR STRLIT RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 144

   36 Statement: PRINT LPAR Expr RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 155


State 145

   27 Statement: IF LPAR Expr RPAR . Statement
   28          | IF LPAR Expr RPAR . Statement ELSE Statement

    error      shift, and go to state 36
    ID         shift, and go to state 37
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40
    PRINT      shift, and go to state 41
    IF         shift, and go to state 42
    SEMICOLON  shift, and go to state 43
    LBRACE     shift, and go to state 45

    Statement         go to state 156
    MethodInvocation  go to state 49
    Assignment        go to state 50
    ParseArgs         go to state 51


State 146

   25 VarDecl: Type ID CommaIdAux SEMICOLON .

    $default  reduce using rule 25 (VarDecl)


State 147

   19 FormalParamsAux: FormalParamsAux COMMA Type . ID

    ID  shift, and go to state 157


State 148

   43 MethodInvocation: ID LPAR Expr AuxExpr RPAR .

    $default  reduce using rule 43 (MethodInvocation)


State 149

   41 AuxExpr: AuxExpr COMMA . Expr

    $default  reduce using rule 69 (InitialExpr)

    Expr         go to state 158
    InitialExpr  go to state 63


State 150

   29 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 29 (Statement)


State 151

   80 TextExpr: LPAR error RPAR .

    $default  reduce using rule 80 (TextExpr)


State 152

   70 TextExpr: LPAR Expr RPAR .

    $default  reduce using rule 70 (TextExpr)


State 153

   47 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    RSQ     shift, and go to state 159
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95


State 154

   37 Statement: PRINT LPAR STRLIT RPAR SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 155

   36 Statement: PRINT LPAR Expr RPAR SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 156

   27 Statement: IF LPAR Expr RPAR Statement .
   28          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 160

    $default  reduce using rule 27 (Statement)


State 157

   19 FormalParamsAux: FormalParamsAux COMMA Type ID .

    $default  reduce using rule 19 (FormalParamsAux)


State 158

   41 AuxExpr: AuxExpr COMMA Expr .
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . XOR Expr
   64     | Expr . LSHIFT Expr
   65     | Expr . RSHIFT Expr

    XOR     shift, and go to state 79
    RSHIFT  shift, and go to state 80
    LSHIFT  shift, and go to state 81
    PLUS    shift, and go to state 83
    STAR    shift, and go to state 84
    MINUS   shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    EQ      shift, and go to state 90
    NE      shift, and go to state 91
    LE      shift, and go to state 92
    GE      shift, and go to state 93
    OR      shift, and go to state 94
    AND     shift, and go to state 95

    $default  reduce using rule 41 (AuxExpr)


State 159

   47 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 161


State 160

   28 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    error      shift, and go to state 36
    ID         shift, and go to state 37
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40
    PRINT      shift, and go to state 41
    IF         shift, and go to state 42
    SEMICOLON  shift, and go to state 43
    LBRACE     shift, and go to state 45

    Statement         go to state 162
    MethodInvocation  go to state 49
    Assignment        go to state 50
    ParseArgs         go to state 51


State 161

   47 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 47 (ParseArgs)


State 162

   28 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 28 (Statement)
