#include "strutcs.h"

program* insertProgram(char *id,declarations *declarationlist);
declarations* insertDeclarationList(declarations *head,methodDec *methdec,fieldDec *fieldec,int semicolon);
fieldDec* insertFieldDec(char *type, listFieldDec *fieldlist);
listFieldDec* insertListFieldDec(listFieldDec *head,char *id);
methodDec* insertMethodDec(methodBody *body,methodHeader *header);
methodHeader* insertMethodHeader(char *type,char *id,params *params);
params* insertParams(params *head,char *id,char *type);
methodBody* insertMethodBody(methodBody *head,varDec *var,statement * state);
varDec* insertVarDec(char *type,listVarDec *list);
listVarDec* insertListVarDec(listVarDec *head,char *id);
void resetStatement(statement *statement1);
statement* insertListStatement(listStatement * head);
expression *insertMultipleExpression(expression *newexpression);
listStatement * insertMultipleStatement(listStatement *head, statement * novo);
statement* insertIfElse(expression *expression1,statement *statement1,statement *statement2);
statement* insertWhile(expression *expression1,statement *statement1);
statement* insertReturn(expression *expression1, int line, int column);
statement* insertMethodInvocationStatement(methodInvocation *methodInvocation1);
statement* insertAssignStatement(assignment *assign1);
statement* insertParseArgsStatement(parseArgs *parseArgs1);
statement* insertPrint(expression *expression1,char *id);
listExpression* insertListExpression(listExpression *head, expression * expression1);
methodInvocation* insertMethodInvocation(char *id,listExpression * head, int line, int column);
assignment* insertAssign ( char * id, expression * expression1, int line, int column);
parseArgs* insertParseArgs (char * id, expression * expression1, int line, int column);
expression* insertAssignment(assignment *assign1);
void resetExpression(expression *expression1);
expression* insertMultipleExpression(expression *newexpression);
expression *insertOperator(expression *expression1,char *operator,expression *expression2,int line,int column);
expression* insertUnitary(char *operator,expression *expression1,int line,int column);
expression* insertExpression(methodInvocation *methodInvocation1,parseArgs *parseArgs1,  int dotlength, char * id, char *intlit, char * boolit, char * reallit, int line,int col);

void printTree(program * pro);
void printMethodDecl(methodDec *base);
void printFieldDecl(fieldDec *aux);
void printMethodBody(methodBody * aux);
void printVarDecl(varDec *aux);
void printExpression(expression *expr);
int countStatement(statement *state);
void printStatement(statement *state);
int countStatement2(statement *state);
char *getType (char* id);
char* getMethodType (char* id);
char* concatString (char* init, char *new);
void printStateIf (statement *state);
char* getMethodParams( char* id);
char* getExpressionType (expression *exp);